<h1>Curl</h1>
<p>This class is for calling a HTTP API using Curl. It provides 2 public methods.</p>
<h2>Call</h2>
<pre>Curl::call($method,$url,$data,$headers,$options)</pre>
<p>Executes Curl call:</p>
<pre>
$result = Curl::call('GET','http://www.bing.com/search',array('q'=>$query));
</pre>
<p>Note that the $data, $headers and $options parameters are optional.
The $data parameter can either be an array (normally) or a string (for raw POST).
In the view (.phtml) file we can show the returned status ('200' on success),
the data (returned body) and the response headers:</p>
<pre>
&lt;?php e($result['status']); ?&gt;
&lt;?php e($result['data']); ?&gt;
&lt;?php e(var_export($result['headers'],true)); ?&gt;
</pre>
<h2>Navigate</h2>
<pre>Curl::navigate($method,$url,$data,$headers,$options)</pre>
<p>Executes Curl call (and follow redirects):</p>
<pre>
$result = Curl::navigate('GET','http://www.bing.com/search',array('q'=>$query));
</pre>
<p>Note that the $data, $headers and $options parameters are optional.
In the view (.phtml) file we can show the effective URL (of the last redirect):</p>
<pre>
&lt;?php e($result['url']); ?&gt;
</pre>
</p>
